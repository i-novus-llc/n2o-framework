<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://n2oapp.net/framework/config/schema/query-5.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dp="http://n2oapp.net/framework/config/schema/data-provider-1.0"
           xmlns:dmn="http://n2oapp.net/framework/config/schema/base/domain-base-1.0">

    <xs:element name="query" type="queryDefinition"/>

    <xs:complexType name="queryDefinition">
        <xs:annotation>
            <xs:documentation>
                Выборка
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="list" type="listDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="unique" type="uniqueDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="count" type="countDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="fields" type="fieldList"/>
            <xs:element name="filters" type="filtersElementDefinition" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="object-id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор объекта выборки
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="route" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    URL выборки.
                    По умолчанию: идентификатор выборки
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute>
            <xs:annotation>
                <xs:documentation>
                    Возможность подключать любые атрибуты
                </xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="listDefinition">
        <xs:annotation>
            <xs:documentation>
                Получение списка записей
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="selectionDefinition">
                <xs:attribute name="result-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Маппинг списка результатов. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="result-normalize" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Нормализация списка результатов. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="count-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Маппинг общего количества записей. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="asc-expression" type="xs:string" default="asc">
                    <xs:annotation>
                        <xs:documentation>
                            Выражение ASC направления сортировки
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="desc-expression" type="xs:string" default="desc">
                    <xs:annotation>
                        <xs:documentation>
                            Выражение DESC направления сортировки
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="additional-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Маппинг дополнительной информации. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="countDefinition">
        <xs:annotation>
            <xs:documentation>
                Получение количества записей
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="selectionDefinition">
                <xs:attribute name="count-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Маппинг количества записей. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="uniqueDefinition">
        <xs:annotation>
            <xs:documentation>
                Получение уникальной записи
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="selectionDefinition">
                <xs:attribute name="result-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Маппинг результата. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="result-normalize" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Нормализация результата. Используется SpEL выражение
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="selectionDefinition">
        <xs:sequence>
            <xs:annotation>
                <xs:documentation>
                    Провайдер данных
                </xs:documentation>
            </xs:annotation>
            <xs:group ref="dp:data-providers"/>
            <xs:any namespace="##other" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Возможность подключать любой провайдер данных
                    </xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
        <xs:attribute name="filters" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификаторы фильтров (через запятую).
                    Вызов провайдера данных сработает только при наличии всех фильтров в запросе
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>


    <xs:complexType name="fieldList">
        <xs:annotation>
            <xs:documentation>
                Список полей выборки
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="field" type="fieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="reference" type="referenceFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="list" type="listFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fieldDefinition">
        <xs:annotation>
            <xs:documentation>
                Простое поле выборки
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="baseFieldDefinition">
                <xs:sequence>
                    <xs:element name="switch" type="switchDefinition" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Наименование поля
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="domain" type="dmn:domainType">
                    <xs:annotation>
                        <xs:documentation>
                            Тип данных
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="default-value" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Значение по умолчанию. Будет использовано, если значение для поля не передано
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sorting" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Является ли поле сортируемым.
                            По умолчанию: false.
                            Если задан `sorting-expression`, то - true
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sorting-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Маппинг направления сортировки поля.
                            По умолчанию: [идентификатор_поля]Direction
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sorting-expression" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Выражение сортировки поля
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filtersElementDefinition">
        <xs:annotation>
            <xs:documentation>
                Список фильтров выборки
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notEq" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="more" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="less" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="like" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="in" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notIn" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <!-- only for Test provider -->
            <xs:element name="contains" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNotNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="eqOrIsNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <!-- only for MongoDB provider -->
            <xs:element name="likeStart" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterDef">
        <xs:annotation>
            <xs:documentation>
                Фильтрация поля выборки
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="filter-id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор фильтра
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор поля фильтра
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="mapping" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Маппинг значения фильтра в поле провайдера.
                    Используется SpEL выражение.
                    По умолчанию: [' + `filter-id` + ']
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="domain" type="dmn:domainType">
            <xs:annotation>
                <xs:documentation>
                    Тип данных, к которому будет приведено значение фильтра.
                    По умолчанию: Значение `domain` от `<field/>`
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="default-value" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Значение, которое будет использоваться, если значение фильтра не передано
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="normalize" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Выражение для предварительной нормализации данных фильтра.
                    Используется SpEL выражение
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="required" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Обязательность фильтра выборки
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="baseFieldDefinition" abstract="true">
        <xs:annotation>
            <xs:documentation>
                Базовое определение поля
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор поля
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="mapping" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Маппинг данных поля из провайдера.
                    Используется SpEL выражение.
                    По умолчанию: [' + `id` + ']
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="normalize" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Нормализация данных поля из провайдера.
                    Используется SpEL выражение
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="select" type="xs:boolean" default="true">
            <xs:annotation>
                <xs:documentation>
                    Участвует ли поле в выборке
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="select-expression" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Выражение для подстановки на место плейсхолдера select в провайдере
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="listFieldDefinition">
        <xs:annotation>
            <xs:documentation>
                Списковое поле выборки
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="referenceFieldDefinition"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="referenceFieldDefinition">
        <xs:annotation>
            <xs:documentation>
                Составное поле выборки
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="baseFieldDefinition">
                <xs:sequence>
                    <xs:element name="field" type="fieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="reference" type="referenceFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="list" type="listFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="select-key" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Ключ для подстановки на место плейсхолдера в select-expression
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="switchDefinition">
        <xs:annotation>
            <xs:documentation>
                Конструкция switch
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="case" type="caseDefinition"/>
            <xs:element name="default" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Вариант по умолчанию
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="caseDefinition">
        <xs:annotation>
            <xs:documentation>
                Вариант переключения
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="value" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Значение, с которым сравнивается значение поля
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
</xs:schema>
