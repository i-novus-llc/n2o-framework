<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://n2oapp.net/framework/config/schema/datasource-1.0"
           xmlns:act="http://n2oapp.net/framework/config/schema/action-2.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:complexType name="datasources">
        <xs:sequence>
            <xs:element name="datasource" type="standardDatasourceDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="stomp-datasource" type="stompDatasourceDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="browser-storage" type="browserStorageDatasourceDefinition" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element name="app-datasource" type="appDatasourceDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="inherited-datasource" type="inheritedDatasourceDefinition" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element name="parent-datasource" type="parentDatasourceDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="cached-datasource" type="cachedDatasourceDefinition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="datasource" type="standardDatasourceDefinition"/>
    <xs:element name="stomp-datasource" type="stompDatasourceDefinition"/>
    <xs:element name="browser-storage" type="browserStorageDatasourceDefinition"/>
    <xs:element name="app-datasource" type="appDatasourceDefinition"/>
    <xs:element name="inherited-datasource" type="inheritedDatasourceDefinition"/>
    <xs:element name="parent-datasource" type="parentDatasourceDefinition"/>
    <xs:element name="cached-datasource" type="cachedDatasourceDefinition"/>

    <xs:complexType name="datasourceDefinition">
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор источника данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="cachedDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Кэширующий источник данных, реализует "смежное" поведение datasource и browser-storage
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="baseDatasourceDefinition">
                <xs:sequence>
                    <xs:element name="submit" type="datasourceSubmit" minOccurs="0"/>
                    <xs:element name="filters" type="datasourceFiltersDefinition" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="object-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор объекта
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="query-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор выборки, на основе которой происходит получение данных
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="route" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            URL получения данных
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="size" type="xs:integer" default="10">
                    <xs:annotation>
                        <xs:documentation>
                            Размер выборки
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="storage-type" type="storageType" default="sessionStorage">
                    <xs:annotation>
                        <xs:documentation>
                            Тип хранилища в браузере
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="storage-key" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Ключ, под которым будут храниться данные.
                            По умолчанию: глобальный идентификатор источника
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="cache-expires" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            С какой периодичностью необходимо проверять актуальность кэша.
                            Задается в формате `1d 3h 2m`
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="parentDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Источник данных, ссылающийся на источник из родительской страницы
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="datasourceDefinition">
                <xs:attribute name="source-datasource" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор источника данных родительской страницы.
                            По умолчанию: значение `id`
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Базовое определение источника данных
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="datasourceDefinition">
                <xs:sequence>
                    <xs:element name="dependencies" type="dependenciesDefinition" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="size" type="xs:integer" default="10">
                    <xs:annotation>
                        <xs:documentation>
                            Размер выборки
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="standardDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Стандартный источник данных
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="baseDatasourceDefinition">
                <xs:sequence>
                    <xs:element name="submit" type="act:submitDefinition" minOccurs="0"/>
                    <xs:element name="filters" type="datasourceFiltersDefinition" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="default-values-mode" type="defaultValuesMode" default="query">
                    <xs:annotation>
                        <xs:documentation>
                            Подстановка значений по умолчанию
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="object-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор объекта
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="query-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор выборки, на основе которой происходит получение данных
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="route" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            URL получения данных
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="defaultValuesMode">
        <xs:annotation>
            <xs:documentation>
                Режим подстановки значений по умолчанию
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="defaults">
                <xs:annotation>
                    <xs:documentation>
                        Значения по умолчанию заполняются данными прописанными в полях
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="query">
                <xs:annotation>
                    <xs:documentation>
                        Значения по умолчанию заполняются данными из запроса
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="merge">
                <xs:annotation>
                    <xs:documentation>
                        Значения по умолчанию заполняются путем слияния данных,
                        прописанных в полях и полученных из запроса (id игнорируется).
                        Полученные из запроса в приоритете
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="appDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Источник данных, ссылающийся на источник из application.xml
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="datasourceDefinition">
                <xs:attribute name="source-datasource" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор источника данных из application.xml.
                            По умолчанию: значение `id`
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="browserStorageDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Источник, использующий хранилище браузера
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="baseDatasourceDefinition">
                <xs:sequence>
                    <xs:element name="submit" type="browserStorageDatasourceSubmit" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="type" type="storageType" default="sessionStorage">
                    <xs:annotation>
                        <xs:documentation>
                            Тип хранилища в браузере
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="key" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Ключ, под которым будут хранится данные.
                            По умолчанию: глобальный идентификатор источника
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="storageType">
        <xs:annotation>
            <xs:documentation>
                Тип хранилища
            </xs:documentation>
        </xs:annotation>
        <xs:restriction>
            <xs:enumeration value="sessionStorage"/>
            <xs:enumeration value="localStorage"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="browserStorageDatasourceSubmit">
        <xs:annotation>
            <xs:documentation>
                Сохранение полей формы при их изменении
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="auto" type="xs:boolean" default="true">
            <xs:annotation>
                <xs:documentation>
                    Автоматически записывать в хранилище при изменении данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="type" type="storageType">
            <xs:annotation>
                <xs:documentation>
                    Тип хранилища, в которое будут записываться данные
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="key" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Ключ, под которым будут записываться данные.
                    По умолчанию: ключ источника данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="model" type="act:clientModel" default="resolve">
            <xs:annotation>
                <xs:documentation>
                    Модель текущего источника данных, которая будет сохранена
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="inheritedDatasourceDefinition">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>
                    Источник данных, получающий данные из другого источника данных
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="baseDatasourceDefinition">
                <xs:sequence>
                    <xs:element name="submit" type="inheritedDatasourceSubmit" minOccurs="0"/>
                    <xs:element name="fetch-value" type="inheritedDatasourceFetchValue" minOccurs="0"/>
                    <xs:element name="filters" type="inheritedDatasourceFiltersDefinition" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="source-datasource" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор источника данных, из которого будут скопированы данные
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="source-model" type="act:clientModel">
                    <xs:annotation>
                        <xs:documentation>
                            Модель источника данных, из которой будут скопированы данные
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="source-field-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Идентификатор поля, из которого будут скопированы данные
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inheritedDatasourceFiltersDefinition">
        <xs:annotation>
            <xs:documentation>
                Предустановленная клиентская фильтрация
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="inheritedDatasourceSubmit">
        <xs:annotation>
            <xs:documentation>
                Сохранение полей формы при их изменении
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="submit-value" type="inheritedDatasourceSubmitValue" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="auto" type="xs:boolean" default="true">
            <xs:annotation>
                <xs:documentation>
                    Автоматически записывать при изменении данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="model" type="act:clientModel" default="resolve">
            <xs:annotation>
                <xs:documentation>
                    Модель текущего источника данных, которая будет сохранена
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="target-datasource" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор источника данных, в который производится сохранение.
                    По умолчанию: значение `source-datasource` источника
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="target-model" type="act:clientModel">
            <xs:annotation>
                <xs:documentation>
                    Модель источника данных, в которую производится сохранение.
                    По умолчанию: значение `source-model` источника
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="target-field-id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор поля, в которое производится сохранение.
                    По умолчанию: значение `source-field-id` источника,
                    если не задан `target-datasource`, иначе - вся модель
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="inheritedDatasourceFetchValue">
        <xs:annotation>
            <xs:documentation>
                JS выражение, позволяющее производить изменения целевой модели при копировании в inherited-datasource
                (Записывается в теле элемента)
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="inheritedDatasourceSubmitValue">
        <xs:annotation>
            <xs:documentation>
                JS выражение, позволяющее производить изменения целевой модели при ее отправке
                (Записывается в теле элемента)
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="stompDatasourceDefinition">
        <xs:annotation>
            <xs:documentation>
                Источник данных, получающий данные по STOMP протоколу
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="datasourceDefinition">
                <xs:sequence>
                    <xs:element name="values" type="valuesDefinition" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Значения на момент инициализации
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="destination" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            Место назначения
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="valuesDefinition">
        <xs:sequence>
            <xs:element name="value" type="valueDefinition" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Инициализирующее значение
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="valueDefinition">
        <xs:anyAttribute>
            <xs:annotation>
                <xs:documentation>
                    Имя атрибута задается пользователем
                </xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="dependenciesDefinition">
        <xs:annotation>
            <xs:documentation>
                Зависимости источника данных
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="fetch" type="fetchDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="copy" type="copyDefinition" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="copyDefinition">
        <xs:annotation>
            <xs:documentation>
                Копирование части модели из другого источника
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="on" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор источника данных, из которого копируются данные
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="target-field-id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор поля текущего источника данных, в которое будут скопированы данные.
                    По умолчанию: вся модель
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="target-model" type="act:clientModel" default="resolve">
            <xs:annotation>
                <xs:documentation>
                    Модель текущего источника данных, в которую будут скопированы данные
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="source-model" type="act:clientModel" default="resolve">
            <xs:annotation>
                <xs:documentation>
                    Модель исходного источника данных, из которой будут скопированы данные
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="source-field-id" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор поля исходного источника данных, из которого будут скопированы данные.
                    По умолчанию: вся модель
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="submit" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Вызов сохранения данных сразу после копирования
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="apply-on-init" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Срабатывание копирования при инициализации источника данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="fetchDefinition">
        <xs:annotation>
            <xs:documentation>
                Обновление данных при изменении зависимых источников данных
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="on" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор зависимого источника данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="model" type="act:clientModel">
            <xs:annotation>
                <xs:documentation>
                    Модель зависимого источника данных
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="datasourceFiltersDefinition">
        <xs:annotation>
            <xs:documentation>
                Предустановленная фильтрация
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="in" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="like" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="likeStart" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNull" type="filterDefSimple" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="contains" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="more" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="less" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notEq" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notIn" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNotNull" type="filterDefSimple" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterDefSimple">
        <xs:annotation>
            <xs:documentation>
                Предустановленная фильтрация поля выборки
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Поле в выборке, по которому будет фильтрация
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="required" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>
                    Обязательность предустановленного фильтра
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="filterDefValue">
        <xs:complexContent>
            <xs:extension base="filterDefBase">
                <xs:annotation>
                    <xs:documentation>
                        Предустановленная фильтрация поля выборки
                    </xs:documentation>
                </xs:annotation>
                <xs:attribute name="value" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Значение фильтра (одно значение)
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="required" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>
                            Обязательность предустановленного фильтра
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterDefValues">
        <xs:complexContent>
            <xs:extension base="filterDefBase">
                <xs:annotation>
                    <xs:documentation>
                        Предустановленная фильтрация поля выборки
                    </xs:documentation>
                </xs:annotation>
                <xs:attribute name="required" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>
                            Обязательность предустановленного фильтра
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="values" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Значения фильтра (через запятую)
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterDefValuesWithBody">
        <xs:complexContent>
            <xs:extension base="filterDefBase">
                <xs:annotation>
                    <xs:documentation>
                        Предустановленная фильтрация поля выборки. С возможностью задания списка значений в теле.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="value" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="values" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Значения фильтра (через запятую)
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterDefBase">
        <xs:annotation>
            <xs:documentation>
                Предустановленная фильтрация поля выборки
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Поле, по которому будет фильтрация
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="datasource" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Идентификатор источника данных, по полю которого будет фильтрация
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="param" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Имя параметра для фильтрации (в случае, если фильтрация по параметру из url).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="model" type="act:clientModel" default="resolve">
            <xs:annotation>
                <xs:documentation>
                    Модель для получения значения фильтра
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="routable" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Попадает ли фильтр в url
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="datasourceSubmit">
        <xs:complexContent>
            <xs:extension base="act:submitDefinition">
                <xs:attribute name="clear-cache-after-submit" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Очищать кэш после submit
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="auto-submit-on" use="prohibited"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>
