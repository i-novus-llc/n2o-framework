<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-5.0" object-id="ProtoClient">
    <list>
        <sql>
            select :select
            from pim_individual i
            left join pim_gender g on g.id = i.gender_id
            left join md_ethnic_group eg on eg.id = i.ethnic_group_id
            left join md_soc_group sg on sg.id = i.social_group_id
            left join pim_nationality n on n.id = i.nationality_id
            where :filters
            order by :sorting
            limit :limit offset :offset
        </sql>
    </list>
    <unique result-mapping="[0]" filters="id">
        <sql>
            select :select
            from pim_individual i
            left join pim_gender g on g.id = i.gender_id
            left join md_ethnic_group eg on eg.id = i.ethnic_group_id
            left join md_soc_group sg on sg.id = i.social_group_id
            left join pim_nationality n on n.id = i.nationality_id
            where i.id = :id
        </sql>
    </unique>
    <count count-mapping="[0]['cnt']">
        <sql>
            select count(*) as cnt
            from pim_individual i
            left join pim_gender g on g.id = i.gender_id
            left join md_ethnic_group eg on eg.id = i.ethnic_group_id
            left join md_soc_group sg on sg.id = i.social_group_id
            left join pim_nationality n on n.id = i.nationality_id
            where :filters
        </sql>
    </count>
    <filters>
        <eq mapping="['id']" filter-id="id" field-id="id">i.id = :id</eq>
        <like mapping="['surname']" filter-id="surname" field-id="surname">i.surname like '%'||:surname||'%'</like>
        <like mapping="['name']" filter-id="name" field-id="name">i.name like '%'||:name||'%'</like>
        <like mapping="['patr_name']" filter-id="patrName" field-id="patrName">i.patr_name like '%'||:patr_name||'%'</like>
        <like mapping="['full_name']" filter-id="fullName" field-id="fullName">:expression like '%'||:full_name||'%'</like>
        <eq mapping="['birt_dt']" filter-id="birthday" field-id="birthday">i.birth_dt = :birthday</eq>
        <more mapping="['bdate_begin']" filter-id="bdate.begin" field-id="birthday">i.birth_dt &gt;= :bdate_begin</more>
        <less mapping="['bdate_end']" filter-id="bdate.end" field-id="birthday">i.birth_dt &lt;= :bdate_end</less>
        <eq mapping="['gender_id']" filter-id="gender.id" field-id="gender.id">g.id = :gender_id</eq>
        <in mapping="['gender_ids']" filter-id="genders*.id" field-id="gender.id">g.id in (:gender_ids)</in>
        <eq mapping="['vip']" filter-id="vip" field-id="vip">i.vip = :vip</eq>
    </filters>

    <fields>
        <field id="id" mapping="['id']" select-expression="i.id"
               domain="integer"/>
        <field id="url" mapping="'/#/clients/' + ['id'] +'/surname'" select-expression="i.id" domain="string"/>
        <field id="surname" mapping="['surname']" select-expression="i.surname"
               domain="string" name="Фамилия"
               sorting-expression="i.surname :surnameSort" sorting-mapping="['surnameSort']" sorting="true"/>
        <field id="name" mapping="['name']" select-expression="i.name"
               domain="string" name="${name}"
               sorting-expression="i.name :nameSort" sorting-mapping="['nameSort']" sorting="true"/>
        <field id="patrName" mapping="['patr_name']" select-expression="i.patr_name"
               domain="string" name="${patronymic}"
               sorting-expression="i.patr_name :patrSort" sorting-mapping="['patrSort']" sorting="true"/>
        <field id="fullName" mapping="['full_name']" select-expression="(:expression) as full_name"
               domain="string" name="${fio}"/>
        <field id="birthday" mapping="['birth_dt']" select-expression="i.birth_dt"
               domain="date" name="${bdate}"
               sorting-expression="i.birth_dt :birthSort" sorting-mapping="['birthSort']" sorting="true"/>
        <field id="age" mapping="['age']" select-expression="(:expression) as age"
               domain="integer" name="${age}"
               sorting-expression=":expression" sorting="true"/>
        <field id="gender.name" mapping="['g_name']" select-expression="g.name as g_name"
               domain="string" name="${gender}"/>
        <field id="genderName" mapping="['g_name']" select-expression="g.name as g_name"
               domain="string" name="${gender}"/>
        <field id="gender.id" mapping="['g_id']" select-expression="g.id as g_id"
               domain="integer"/>
        <field id="vip" mapping="['vip']" select-expression="i.vip"
               domain="boolean" name="VIP"/>
        <field id="hasCitizenship" mapping="['has_citizenship']" select-expression="i.has_citizenship"
               domain="boolean" name="${citizen}"/>
        <field id="ethnicGroupName" mapping="['eg_name']" select-expression="eg.name as eg_name"
               domain="string" name="${ethnic.group}"/>
        <field id="socialGroupName" mapping="['sg_name']" select-expression="sg.name as sg_name"
               domain="string" name="${social.group}"/>
        <field id="nationality.name" mapping="['n_name']" select-expression="n.name as n_name"
               domain="string" name="${nationality}"/>
        <field id="nationality.id" mapping="['n_id']" select-expression="n.id as n_id"
               domain="integer"/>
    </fields>
</query>