<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-5.0" object-id="ProtoContacts">
    <list>
        <sql>
            select :select
            from pim_indiv_contact ic
            join pim_party_contact_type c on c.id = ic.type_id
            where :filters
            order by :order
        </sql>
    </list>
    <count>
        <sql>
            select count(*)
            from pim_indiv_contact ic
            join pim_party_contact_type c on c.id = ic.type_id
            where :filters
        </sql>
    </count>

    <filters>
        <eq filter-id="id" field-id="id">ic.id = :id</eq>
        <eq filter-id="individualId" field-id="individualId">ic.indiv_id = :individualId</eq>
        <eq filter-id="value" field-id="value">ic.value like :value||'%'</eq>
        <eq filter-id="type.id" field-id="type.id">ic.type_id = :type.id</eq>
    </filters>

    <fields>
        <field id="id" mapping="['id']" select-expression="ic.id" domain="integer"/>
        <field id="individualId" mapping="['indiv_id']" select-expression="ic.indiv_id as indiv_id" domain="integer"/>
        <field id="value" mapping="['value']" select-expression="ic.value"
               domain="string" name="${value}"
               sorting-expression="ic.value"/>
        <field id="email" mapping="['value']" select-expression="ic.value"
               domain="string" name="${email}"/>
        <field id="phone" mapping="['value']" select-expression="ic.value"
               domain="string" name="${phone}"/>
        <field id="type.id" mapping="['type_id']" select-expression="c.id as type_id"
               domain="integer"/>
        <field id="type.name" mapping="['type_name']" select-expression="c.name as type_name"
               domain="string" name="${type}"/>
    </fields>
</query>